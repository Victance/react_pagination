{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","itemsPerPage","currentPage","onPageChange","lastPage","Math","ceil","pages","className","classNames","disabled","href","onClick","map","page","active","items","App","useState","setPage","setItemsPerPage","start","itemsLength","length","end","displayesItems","slice","id","value","onChange","event","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCGIG,EAA6B,SAAC,GAEpC,IADLC,EACI,EADJA,MAAOC,EACH,EADGA,aAAcC,EACjB,EADiBA,YAAaC,EAC9B,EAD8BA,aAE5BC,EAAWC,KAAKC,KAAKN,EAAQC,GAC7BM,EAAQd,EAAW,EAAGY,KAAKC,KAAKF,IAEtC,OACE,mCACE,qBAAII,UAAU,aAAd,UACE,oBACEA,UAAWC,IAAW,YAAa,CACjCC,SAA0B,IAAhBR,IAFd,SAKE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBT,EACfU,QAAS,WACa,IAAhBV,GACFC,EAAaD,EAAc,IAPjC,oBAeDK,EAAMM,KAAI,SAAAC,GAAI,OACb,oBAEEN,UAAWC,IAAW,YAAa,CACjCM,OAAQD,IAASZ,IAHrB,SAME,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAK,KACLC,QAAS,WACHE,IAASZ,GACXC,EAAaW,IANnB,SAUGA,KAfEA,MAoBT,oBACEN,UAAWC,IAAW,YAAa,CACjCC,SAAUR,IAAgBE,IAF9B,SAKE,mBACE,UAAQ,WACRI,UAAU,YACVG,KAAK,QACL,gBAAeT,IAAgBE,EAC/BQ,QAAS,WACHV,IAAgBE,GAClBD,EAAaD,EAAc,IAPjC,0BC5DJc,EAAQvB,EAAW,EAAG,IAAIoB,KAAI,SAAAhB,GAAC,qBAAYA,MAEpCoB,EAAgB,WAC3B,MAAwBC,mBAAS,GAAjC,mBAAOJ,EAAP,KAAaK,EAAb,KACA,EAAwCD,mBAAS,GAAjD,mBAAOjB,EAAP,KAAqBmB,EAArB,KAEMC,GAASP,EAAO,GAAKb,EACrBqB,EAAcN,EAAMO,OACpBC,EAAMV,EAAOb,EAAeqB,EAC9BR,EAAOb,EACPqB,EACEG,EAAiBT,EAAMU,MAAML,EAAOG,GAE1C,OACE,sBAAKhB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWM,EADX,mBAC0BO,EAAQ,EADlC,cACyCG,EADzC,eACmDR,EAAMO,OADzD,OAIA,sBAAKf,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRmB,GAAG,kBACHnB,UAAU,eACVoB,MAAO3B,EACP4B,SAAU,SAAAC,GACRV,GAAiBU,EAAMC,OAAOH,OAC9BT,EAAQ,IAPZ,UAUE,wBAAQS,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBxB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACER,MAAOsB,EACPrB,aAAcA,EACdC,YAAaY,EACbX,aAAcgB,IAGhB,6BACGM,EAAeZ,KAAI,SAAAoB,GAAI,OACtB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YCzDnBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.60a7a3a4.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  itemsPerPage: number,\n  currentPage: number,\n  onPageChange: (page:number) => void\n};\n\nexport const Pagination:React.FC<Props> = ({\n  total, itemsPerPage, currentPage, onPageChange,\n}) => {\n  const lastPage = Math.ceil(total / itemsPerPage);\n  const pages = getNumbers(1, Math.ceil(lastPage));\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li\n          className={classNames('page-item', {\n            disabled: currentPage === 1,\n          })}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1}\n            onClick={() => {\n              if (currentPage !== 1) {\n                onPageChange(currentPage - 1);\n              }\n            }}\n          >\n            «\n          </a>\n        </li>\n\n        {pages.map(page => (\n          <li\n            key={page}\n            className={classNames('page-item', {\n              active: page === currentPage,\n            })}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href=\"#1\"\n              onClick={() => {\n                if (page !== currentPage) {\n                  onPageChange(page);\n                }\n              }}\n            >\n              {page}\n            </a>\n          </li>\n        ))}\n\n        <li\n          className={classNames('page-item', {\n            disabled: currentPage === lastPage,\n          })}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === lastPage}\n            onClick={() => {\n              if (currentPage !== lastPage) {\n                onPageChange(currentPage + 1);\n              }\n            }}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42).map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [page, setPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n\n  const start = (page - 1) * itemsPerPage;\n  const itemsLength = items.length;\n  const end = page * itemsPerPage < itemsLength\n    ? page * itemsPerPage\n    : itemsLength;\n  const displayesItems = items.slice(start, end);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${page} (items ${start + 1} - ${end} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={event => {\n              setItemsPerPage(+event.target.value);\n              setPage(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={itemsLength}\n        itemsPerPage={itemsPerPage}\n        currentPage={page}\n        onPageChange={setPage}\n      />\n\n      <ul>\n        {displayesItems.map(item => (\n          <li key={item} data-cy=\"item\">{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}